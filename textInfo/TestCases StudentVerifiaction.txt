There are two parts in the student verification project:-
 1) Student registration:
	Student register their faces when completing their registration process
 2) Face matching or student verification:
	students verify themselves before starting the viva so as to confirm the right student is giving the viva and there is no cheating giving the test

***Student Registration***
This phase is composed of three processes: 
1)Camera popping and student capturing their faces and sending to the preprocessing phase
Restrictions while capturing the image:
	1)The student should be alone inside the box while registration, while clicking the image
	2)The background should not be bright, there should be even light in the background
	3)Images should not be blurry or pixelated
	4)No objects, such as phone or notebook, be captured in the camera frame
	5)Face should occupy significant proportion of the frame
	6)No bright light on the face, light should be even on the face
	7)No masks
	8)No tilted face, try to keep the face straight

To tackle these restrictions we developed a camera where there is box at the centre and the student have to be in that box
points tackled till now:- 1), 8), 4)
points to tackle:- 2), 3), 5), 6), 7)

2)Preprocessing of the image and sending the image to the database
Preprocessing the image is simply making it suitable to store in database without compromising the quality of the image. Space optimisation is the key that's why we are taking the image in 640 x 480 resolution, not too high and not too low compromising the quality
In the preprocessing we are cropping the image to extract the face only then finding the landmarks on the face to see if something is obstructing the face and then with the help of iris landmarks we are aligning the face so that the face is straight

3)Storing the image to the database
storing the aligned face in the database as a base64 string because mongodb only stores binary data as a image			

Test cases for registration :-
1) Test cases for image capturing:- 
	a)Opening of camera
	/Error indicating unable to open the camera
	b)Image should be at the centre of the frame
	/Error indicating that person should be at the centre
		solution: red frame at the centre of the camera
		why its needed: because it becomes easier of the model to compare images when student verification takes place
	c)Image capturing at a single click of mouse or by pressing the enter button
	/Error indicating not able to capture the image and exiting the registration of the student
	d)camera closing using the ESC button or the cross button of camera incase if student doesn't want to do the registration
	/Error indicating not able to use ESC of cross button and closing of the registration program
	e)Successfully exiting the student registration if the student pressed ESC button.
	/Error if the ESC key failed and stop the registration of the student or exit the student registration
	f)Image only clicked if the face is in that box
	/Error indicating that the face should be in that box
	g)If mobile phone/notebook/or any object detected in that frame, then indicating appropriate message of the object detection and prompt student to remove that object.
	/Error if the object detection model fails and the student registration  stops
	h)Box changing color to green from red, if only the face is detected inside the frame and giving the conformation that student now can capture the image
	/Error changing color and failure of the student registration
		why its needed: clicking the student image at the centre and objects free, especially mobile, so that nothing obstructs the face and face is at centre and clear for further 				verification process
	i)This red box only detect faces, one or multiple so if no face detected then prompt in the camera no face detected try to capture only the face
	/Error if image is captured without any face i.e. the face detection model fails then exit the registration program
	j)Test cases of the camera:- 1)Camera containing text at positions: At top left- a)Press Enter/Mouse click to capture the image
											 b)Press ESC to exit from camera
									    		 /Error if the text not displayed and student registration ends
									    At center left- a)In green color a text indicating that the face is inside the frame
											    b)In red color a text that the frame is not inside the frame
											    /Error if the text not displayed and the registration ends
									    At bottom right- a)In green color text if the student successfully captured his image and now the image is ready 											     for preprocessing 
											     b)In red text that image not captured as either the face is not in the box i.e the face 												     detection model fails or their are unnecessary objects in the frame
											     /Error if the text not displayed and the registration fails
	
	k)Successfully sending the image for preprocessing before saving to the database
	/Error if not able to preprocess the image and the student registration stops

2) Test cases for image preprocessing:-
	a)Receiving of the centered face image without any objects
	/Error if didn't got the image or got an image containing the objects and non centered face image then stop the student registration
	b)Ensure that this process should be done before saving the image in mongodb and after capturing the image
	/Error if this process executes before the image capturing or after saving the image in mongodb then exit the student registration	
	c)Detect the first face appearing in the image, if multiple faces detected 
	/Error if multiple faces captured in the frame and student registration fails
	/Error displaying that multiple faces detected and do your registration alone or at least place only your face in the red box
	d)Cropping the image such that the out is only the face
	/Error if the cropping function fails and not able to crop the image then the student registration fails
		why its necessary: because we are capturing the image in 640 x 480 resolution and its important to minimize its size up to certain limit because then there is space 					   optimisation otherwise the space is not optimized correctly
	e)Detecting 478 landmarks of the face including 10 iris landmarks
	/Error detecting the landmarks or the detect landmark function fails then prompt appropriate message that something is obstructing the face and end the student registration
		why its necessary- if some landmarks are missing then we will get to know that something is obstructing the face, eg hand kept on a single eye or light falling on the 					   single eye, we want a clear face for student verification process
				   the 10 iris landmarks are necessary for the face alignment process
	f)Face alignment if the face is tilted
	/Error if the alignment function fails and didn't align the face then simply prompt the error message and exit the student registration
		why its necessary- it becomes easier for our face matching model to compare the straight faces
	g)Return this preprocessed image to store that in mongodb
	/Error returning and storing then prompt the appropriate message and stop the registration

3) Storing the image in the database
	a)Access the preprocessed image
	/Error accessing then prompt the appropriate message and exit student registration
	b)Convert the image to the base64 string 
	/Error converting to the string then prompt the appropriate message and exit the student registration
		why its necessary- because in mongodb we cannot store the direct image, first we need to convert into binary data
	c)Store the image as name as the primary key using pymongo
	/Error storing the image then prompt the appropriate message and exit the student registration 

***Student Verification***
This phase is only considered when the student is giving the text or the viva
This process is composed of three processes:
1)Extracting the image stored in mongodb
taking the binary data, which is our image, converting it to the numpy array as our Deepface model Facenet512 only takes direct .jpg image or numpy array of that of that image
Preprocessing and the camera features are the same as that of the registration process
2)Taking real time image 
taking real time image by the camera, preprocessing it and converting that to numpy array
3)Comparing both images
inputting these two numpy array to the model and then taking the final score

we don't convert the base64 image data to numpy array rather conver that binary data to a image first with the pillow library then convert that to the numpy array

Test cases of the student verification:
1)Retrieve image from database:
	a)With the help of students name fetch the binary image data. This students name is taken during the login phase and then used in this student verification phase
	/Error fetching the image then prompt error message cannot fetch image and exit the test
	b)Convert the accessed base64 string to PIL image and return to the model
	/Error converting to convert to PIL image then prompt the error message and end the test
	
2)Take real time image of the student:
	1) Test cases for image capturing:- 
		a)Opening of camera
		/Error indicating unable to open the camera
		b)Image should be at the centre of the frame
		/Error indicating that person should be at the centre
			solution: red frame at the centre of the camera
			why its needed: because it becomes easier of the model to compare images when student verification takes place
		c)Image capturing at a single click of mouse or by pressing the enter button
		/Error indicating not able to capture the image and exiting the camera and closing the verification
		d)camera closing using the ESC button or the cross button of camera incase if student doesn't want to do the verification
		/Error indicating not able to use ESC of cross button and closing of the verification program
		e)Successfully exiting the student registration if the student pressed ESC button.
		/Error if the ESC key failed and stop the verification of the student or exit the student verification
		f)Image only clicked if the face is in that box
		/Error indicating that the face should be in that box
		g)If mobile phone/notebook/or any object detected in that frame, then indicating appropriate message of the object detection and prompt student to remove that object.
		/Error if the object detection model fails and the student verification stops
		h)Box changing color to green from red, if only the face is detected inside the frame and giving the conformation that student now can capture the image
		/Error changing color and failure of the student verification
		i)This red box only detect faces, one or multiple so if no face detected then prompt in the camera no face detected try to capture only the face
		/Error if image is captured without any face i.e. the face detection model fails then exit the verification program
		j)Test cases of the camera:- 1)Camera containing text at positions: At top left- a)Press Enter/Mouse click to capture the image
											 	 b)Press ESC to exit from camera
									    		 	/Error if the text not displayed and student verification ends
									   	    At center left- a)In green color a text indicating that the face is inside the frame
											    	    b)In red color a text that the frame is not inside the frame
											    	    /Error if the text not displayed and the verification ends
									    	    At bottom right- a)In green color text if the student successfully captured his image and now the image 												     is ready for preprocessing 
											     	     b)In red text that image not captured as either the face is not in the box i.e the face 												     detection model fails or their are unnecessary objects in the frame
											    	     /Error if the text not displayed and the verification fails
	
		k)Successfully sending the image for preprocessing before passing to the model for face matching 
		/Error if not able to preprocess the image and the student verification stops

	2) Test cases for image preprocessing:-
		a)Receiving of the centered face image without any objects
		/Error if didn't got the image or got an image containing the objects and non centered face image then stop the student verification
		b)Ensure that this process should be done before passing the image to the model
		/Error if this process executes before the passing the image to the model then exit the student verification	
		c)Detect the first face appearing in the image, if multiple faces detected 
		/Error if multiple faces captured in the frame and student verification fails
		/Error displaying that multiple faces detected and give your test alone
		d)Cropping the image such that the out is only the face
		/Error if the cropping function fails and not able to crop the image then the student verification fails
			why its necessary: beneficial to crop the unnecessary portion of the image and take only the face to compare
		e)Detecting 478 landmarks of the face including 10 iris landmarks
		/Error detecting the landmarks or the detect landmark function fails then prompt appropriate message that something is obstructing the face and end the student verification
			why its necessary- if some landmarks are missing then we will get to know that something is obstructing the face, eg hand kept on a single eye or light falling on 					   the single eye, we want a clear face for student verification process the 10 iris landmarks are necessary for the face alignment process
		f)Face alignment if the face is tilted
		/Error if the alignment function fails and didn't align the face then simply prompt the error message and exit the student verification
		why its necessary- it becomes easier for our face matching model to compare the straight faces
		g)Convert this preprocessed image to the PIL image and then convert to the numpy array
		/Error converting to the PIL image then prompt the appropriate error message and exit the student verification
		
3)Face Matching:
	a)Loading the DeepFace Facenet512 model
	/Error loading the model then prompt the appropriate error message and exit the student verification process
	b)giving two images as numpy array to the model
	/Error giving input to the model then prompt the appropriate message and exit the student verification process
	c)Setting the required threshold for comparison and other necessary parameters of the model
	d)If model produces an internal error then displaying the error and exiting the verification process
	e)Taking the final result of the model and then processing further based on that decision.
